#from request import Request
import re

class MultipartData:
    def __init__(self, boundary, parts):
        self.boundary = boundary
        self.parts = parts

    class Part:
        def __init__(self, headers, name, content):
            self.headers = headers
            self.name = name
            self.content = content

def parse_multipart(request):
    content_type = request.headers.get('Content-Type', '')
    boundary = content_type.split('boundary=')[-1].encode()

    parts = []
    raw_parts = request.body.split(b'--' + boundary)[1:-1] 

    for part in raw_parts:
        part = part.strip(b'\r\n') 
        headers_part, body = part.split(b'\r\n\r\n', 1)
        
        headers = {}
        for header in headers_part.split(b'\r\n'):
            key, value = header.split(b': ', 1)
            headers[key.decode()] = value.decode()
        
        content_disposition = headers.get('Content-Disposition', '')
        name_match = re.search(r'name="([^"]+)"', content_disposition)
        name = name_match.group(1) if name_match else None
        
        parts.append(MultipartData.Part(headers, name, body))
    
    return MultipartData(boundary.decode(), parts)
